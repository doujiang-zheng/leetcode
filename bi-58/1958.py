class Solution:
    def checkMove(self, board: List[List[str]], rMove: int, cMove: int,
                  color: str) -> bool:
        pass


if __name__ == '__main__':
    sol = Solution()
    boards = [[[".", ".", ".", "B", ".", ".", ".", "."],
               [".", ".", ".", "W", ".", ".", ".", "."],
               [".", ".", ".", "W", ".", ".", ".", "."],
               [".", ".", ".", "W", ".", ".", ".", "."],
               ["W", "B", "B", ".", "W", "W", "W", "B"],
               [".", ".", ".", "B", ".", ".", ".", "."],
               [".", ".", ".", "B", ".", ".", ".", "."],
               [".", ".", ".", "W", ".", ".", ".", "."]],
              [[".", ".", ".", ".", ".", ".", ".", "."],
               [".", "B", ".", ".", "W", ".", ".", "."],
               [".", ".", "W", ".", ".", ".", ".", "."],
               [".", ".", ".", "W", "B", ".", ".", "."],
               [".", ".", ".", ".", ".", ".", ".", "."],
               [".", ".", ".", ".", "B", "W", ".", "."],
               [".", ".", ".", ".", ".", ".", "W", "."],
               [".", ".", ".", ".", ".", ".", ".", "B"]]]
    rmoves = [4, 4]
    cmoves = [3, 4]
    colors = ['B', 'W']
    for board, rmove, cmove, color in zip(boards, rmoves, cmoves, colors):
        print(sol.checkMove(board, rmove, cmove, color))